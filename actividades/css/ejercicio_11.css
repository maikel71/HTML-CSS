/*
    Crea un nuevo documento HTML con el título "Diseño Responsive con CSS"
        > Crea un nuevo fichero CSS e impórtalo en el documento HTML principal
        > Crea las siguientes dos secciones:
            - Una barra lateral izquierda con tres elementos en vertical
            - Una sección principal a la derecha
            - (Tip: Utiliza la disposición flex donde la sección principal utilizará flex-grow)
        > Utiliza las media queries para que cuando el ancho del viewport sea menor de 640px ocurra lo siguiente:
            - La barra lateral izquierda se muestre como una navegación en la parte inferior
            - La disposición de los elementos de la barra lateral se vuelva horizontal
            - (Tip: Trabaja con la propiedad flex-direction)
*/

/* 4. En el fichero CSS, definimos los estilos de los elementos 
    que hemos creado en el HTML. Primero, le damos al "contenedor" 
    la propiedad display: flex; para que sus hijos se dispongan 
    en una fila por defecto. */
.contenedor {
    display: flex;
}

/* 5. Luego, le damos al "barraLateral" un ancho fijo de 200px 
    y un color de fondo azul claro.*/
.barraLateral {
    /* border: 1px solid blue; */
    width: 200px;
    background-color: lightblue;
}

/* 6. A los elementos les damos un relleno de 10px y un borde de 1px sólido negro. */
.elemento {
    padding: 10px;
    /* margin: 10px;
    text-align: center;
    line-height: 15px;
    font-size: 25px; */
    border: 1px solid black;
    /* background-color: bisque; */
}

/* 7. Al "seccionPrincipal" le damos la propiedad flex-grow: 1; 
    para que ocupe todo el espacio disponible en la fila, y un color 
    de fondo verde claro. También le ponemos un contenido de ejemplo 
    con un título y un párrafo. */
.seccionPrincipal {
    flex-grow: 1;
    /* border: 1px solid red; */
    background-color: lightgreen;
}

/* 8. Por último, usamos las media queries para definir los estilos 
    que se aplicarán cuando el ancho del viewport sea menor de 640px. 
    Para ello, usamos la regla @media (max-width: 640px) { ... }. */
@media (max-width: 640px) {
    /* 9. Dentro de esta regla, cambiamos la propiedad flex-direction 
        del "contenedor" a column-reverse para que sus hijos se dispongan 
        en una columna invertida, es decir, el "barraLateral" debajo 
        del "seccionPrincipal". */
    .contenedor {
        flex-direction: column-reverse; /*para que La barra lateral izquierda se muestre como una navegación en la parte inferior*/
    }

    /* 10. También cambiamos el ancho y la altura del "barraLateral" 
        a 100% y 100px respectivamente, para que ocupe todo el ancho y 
        tenga una altura fija. Además, le damos la propiedad display: flex; 
        para que sus hijos se dispongan en una fila dentro de él. 
        Usamos las propiedades flex-direction: row;, justify-content: space-around; y 
        align-items: center; para alinear los "elemento" horizontalmente y 
        centrarlos verticalmente. */
    .barraLateral {
        width: 100%;
        height: 100px;
        display: flex;
        flex-direction: row;
        justify-content: space-around;
        align-items: center;
    }

    /* 11. Al "seccionPrincipal" le cambiamos la altura 
        a calc(100vh - 100px); para que ocupe todo el alto menos 
        el espacio que ocupa el "barraLateral". */
    .seccionPrincipal {
        height: calc(100vh - 100px);
    }
}
